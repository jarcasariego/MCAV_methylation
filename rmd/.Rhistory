df$density <- get_density(log(df$gene_cv_Cc), df$mean_Cc*100, n = 100)
temp <- ggplot(df,aes(log(x=gene_cv_Cc),y=mean_Cc*100)) +
geom_point(aes(color = density)) + ylim(0,100) + scale_color_viridis() +
geom_smooth(method=lm,colour="orange",size=2) +
labs(x=bquote("Gene Expression"~CV[Ind]~"(log)"),y="DNA Methylation (%)") +
theme_cowplot()
pL_cv[[i]]<- temp
}
right_alt <- plot_grid(pL_mean[[1]], pL_cv[[1]], labels=c("C", "D"),ncol=1)
### Figure 5 ###
fig5 <- plot_grid(pPCA_alt,right_alt)
#ggsave(fig5,filename="results/figures/Figure5/Figure5.pdf")
ggsave(fig5,filename="../output/DNAm_GE_Ctrol.png", height = 7, width = 9)
### Statistics ###
# Linear model with Mean gene DNA methylation as predictor
# and Mean gene expression or CV as response
# Mean Methylation vs. Mean Gene Expression
(cpg_ge <- summary(lm(mat$gene_mean~mat$mean_Cc)))
# Mean Methylation vs. CV Gene Expression
(cpg_cv <- summary(lm(mat$gene_cv_Cc~mat$mean_Cc)))
# Number of genes included
length(mat$mean_Cc)
#### Supplemental Plots for figure 5 ####
## Percent CpG cover within genes X number of genes ##
# Lets check out different filtering levels based on % CpGs covered in a gene
covRange <- data.frame(Percent_Coverage=seq(0,100,5),
NumGenes=sapply(seq(0,100,5),perCentCpGCoverage))
# Plot shows number of genes in dataset vs. % CpGs covered within the gene
coverage_fig <- ggplot(covRange,aes(y=NumGenes,x=Percent_Coverage,colour=viridis(1))) +
geom_vline(xintercept = 5,colour="purple",size=2) +
geom_line(colour="black") + geom_point(size=5) +
theme_cowplot() +
labs(x="Percent Coverage",y="Number of Genes",
title="Within Gene CpG Coverage") +
theme(legend.position = "none",
plot.title = element_text(hjust = 0.5))
coverage_fig
#ggsave(plot_grid(coverage_fig),filename="results/figures/Figure5/supp_Fig5_CpGByGeneCoverage.pdf")
ggsave(coverage_fig,filename="../output/CpGByGeneCoverage.png")
## Additional PCA figures
suppPCA_fig_list <- list()
for(i in 1:length(pca_obj)){
suppPCA_fig_list[[i]] <- plot_grid(pca_obj[[i]],labels=c(namePlot[i]),nrow = 1)
}
suppPCA_fig_rows <- list()
for(i in 1:length(dats_V2)){
temp <- textGrob(dats_V2[i],
gp=gpar(col="black",
fontsize=15))
suppPCA_fig_rows[[i]] <-grid.arrange(arrangeGrob(suppPCA_fig_list[[i]],top = temp))
}
suppPCA_final <- plot_grid(plotlist = suppPCA_fig_rows,nrow=1)
#ggsave(suppPCA_final,filename="results/figures/Figure5/supp_Fig5_PCAsupp.pdf")
ggsave(suppPCA_final,filename="../output/Fig_PCAsupp.png", height = 4, width = 7)
## PC axes % contribution figure ##
#Contribution plot list for different coverage thresholds
contribute_fig_list <- list()
for(i in 1:length(prcomp_obj)){
temp <- suppContriFig(prcomp_obj[[1]])
contribute_fig_list[[i]] <- plot_grid(plotlist =temp,labels=c(namePlot[i]),nrow = 1)
}
contribute_fig_rows <- list()
for(i in 1:length(dats_V2)){
temp <- textGrob(dats_V2[i],
gp=gpar(col="black",
fontsize=15))
contribute_fig_rows[[i]] <-grid.arrange(arrangeGrob(contribute_fig_list[[i]],top = temp))
}
contribute_final <- plot_grid(plotlist = contribute_fig_rows,nrow=length(dats_V2))
#ggsave(contribute_final,filename="results/figures/Figure5/supp_Fig5_PCAAttContr.pdf")
ggsave(contribute_final,filename="../output/PCAAttContr.png", height = 7, width = 10)
## Gene Expression
plot_grid(plotlist=pL_mean,labels = namePlot)
## CV
plot_grid(plotlist=pL_cv,labels = namePlot)
# prepare DMGs to filter DM/GE data
DMG_sym <- read.delim("../output/Sym_DMG_annot.tsv", sep = "\t")
DMG_trt <- read.delim("../output/heat_DMG_annot.tsv", sep = "\t")
DMG_sym_trt <- read.delim("../output/SymXtrt2_DMG_annot.tsv", sep = "\t")
DMG_Heated <- read.delim("../output/Ch_Dh_DMG_annot.tsv", sep = "\t")
DMG_Ctrol <- read.delim("../output/Cc_DC_DMG_annot.tsv", sep = "\t")
DMG_SymbC <- read.delim("../output/Cc_Ch_DMG_annot.tsv", sep = "\t")
DMG_SymbD <- read.delim("../output/Dc_Dh_DMG_annot.tsv", sep = "\t")
#keep only gene_id, scaffold, start and end
DMG_sym <- DMG_sym[, c(1,18:20)]
colnames(DMG_sym) <- c("gene_id","scaffold","start","stop")
DMG_sym$label <- paste0(DMG_sym$scaffold,"_",DMG_sym$start,"_",DMG_sym$stop)
DMG_trt <- DMG_trt[, c(1,18:20)]
colnames(DMG_trt) <- c("gene_id","scaffold","start","stop")
DMG_trt$label <- paste0(DMG_trt$scaffold,"_",DMG_trt$start,"_",DMG_trt$stop)
DMG_sym_trt <- DMG_sym_trt[, c(1,18:20)]
colnames(DMG_sym_trt) <- c("gene_id","scaffold","start","stop")
DMG_sym_trt$label <- paste0(DMG_sym_trt$scaffold,"_",DMG_sym_trt$start,"_",DMG_sym_trt$stop)
DMG_Heated <- DMG_Heated[, c(1,18:20)]
colnames(DMG_Heated) <- c("gene_id","scaffold","start","stop")
DMG_Heated$label <- paste0(DMG_Heated$scaffold,"_",DMG_Heated$start,"_",DMG_Heated$stop)
DMG_Ctrol <- DMG_Ctrol[, c(1,18:20)]
colnames(DMG_Ctrol) <- c("gene_id","scaffold","start","stop")
DMG_Ctrol$label <- paste0(DMG_Ctrol$scaffold,"_",DMG_Ctrol$start,"_",DMG_Ctrol$stop)
DMG_SymbC <- DMG_SymbC[, c(1,18:20)]
colnames(DMG_SymbC) <- c("gene_id","scaffold","start","stop")
DMG_SymbC$label <- paste0(DMG_SymbC$scaffold,"_",DMG_SymbC$start,"_",DMG_SymbC$stop)
DMG_SymbD <- DMG_SymbD[, c(1,18:20)]
colnames(DMG_SymbD) <- c("gene_id","scaffold","start","stop")
DMG_SymbD$label <- paste0(DMG_SymbD$scaffold,"_",DMG_SymbD$start,"_",DMG_SymbD$stop)
#Subset DM/GE dataset
mat_red <- subset(mat,select=c("label","diff_Trt","diff_Symb","diff_SymbC_Trt","diff_SymbD_Trt",
"diff_Ctrol_Symb","diff_Heated_Symb","gene_diff_Trt","gene_diff_Symb",
"gene_diff_SymbC_Trt","gene_diff_SymbD_Trt","gene_diff_Ctrol_Symb",
"gene_diff_Heated_Symb","gene_cv_Cc","gene_cv_Ch","gene_cv_Dc","gene_cv_Dh"))
mat_red[,2:9] <- mat_red[,2:9]*100
DMG_sym_join <- left_join(DMG_sym,mat_red,by="label")
DMG_sym_join <- DMG_sym_join[complete.cases(DMG_sym_join),] #eliminate genes for which no GE data is available
DMG_trt_join <- left_join(DMG_trt,mat_red,by="label")
DMG_trt_join <- DMG_trt_join[complete.cases(DMG_trt_join),] #eliminate genes for which no GE data is available
DMG_sym_trt_join <- left_join(DMG_sym_trt,mat_red,by="label")
DMG_sym_trt_join <- DMG_sym_trt_join[complete.cases(DMG_sym_trt_join),] #eliminate genes for which no GE data is available
DMG_Ctrol_join <- left_join(DMG_Ctrol,mat_red,by="label")
DMG_Ctrol_join <- DMG_Ctrol_join[complete.cases(DMG_Ctrol_join),] #eliminate genes for which no GE data is available
DMG_Heated_join <- left_join(DMG_Heated,mat_red,by="label")
DMG_Heated_join <- DMG_Heated_join[complete.cases(DMG_Heated_join),] #eliminate genes for which no GE data is available
DMG_SymbC_join <- left_join(DMG_SymbC,mat_red,by="label")
DMG_SymbC_join <- DMG_SymbC_join[complete.cases(DMG_SymbC_join),] #eliminate genes for which no GE data is available
DMG_SymbD_join <- left_join(DMG_SymbD,mat_red,by="label")
DMG_SymbD_join <- DMG_SymbD_join[complete.cases(DMG_SymbD_join),] #eliminate genes for which no GE data is available
#Create a diff_cv variable for all contrasts
DMG_Ctrol_join$diff.cv <- c(DMG_Ctrol_join$gene_cv_Dc-DMG_Ctrol_join$gene_cv_Cc)
DMG_Ctrol_join$methylDirection <- ifelse(DMG_Ctrol_join$diff_Ctrol_Symb < 0,
"Hypomethylation",
"Hypermethylation")
DMG_Heated_join$diff.cv <- c(DMG_Heated_join$gene_cv_Dc-DMG_Heated_join$gene_cv_Cc)
DMG_Heated_join$methylDirection <- ifelse(DMG_Heated_join$diff_Heated_Symb < 0,
"Hypomethylation",
"Hypermethylation")
DMG_SymbC_join$diff.cv <- c(DMG_SymbC_join$gene_cv_Dc-DMG_SymbC_join$gene_cv_Cc)
DMG_SymbC_join$methylDirection <- ifelse(DMG_SymbC_join$diff_SymbC_Trt < 0,
"Hypomethylation",
"Hypermethylation")
DMG_SymbD_join$diff.cv <- c(DMG_SymbD_join$gene_cv_Dc-DMG_SymbD_join$gene_cv_Cc)
DMG_SymbD_join$methylDirection <- ifelse(DMG_SymbD_join$diff_SymbD_Trt < 0,
"Hypomethylation",
"Hypermethylation")
#### Gene Expression vs. DMG change ####
p1<-ggplot(DMG_Ctrol_join,
aes(x=diff_Ctrol_Symb,y=gene_diff_Ctrol_Symb,colour=methylDirection)) +
geom_smooth(method=lm,colour="orange",size=2,na.rm = TRUE) +
geom_point(size=3) + ylim(-5,5) + xlim(-20,20) +
theme_cowplot() + scale_color_manual(values=pal[c(3,1)]) +
labs(y=bquote("Gene expression (FoldChange"~Log[2]~")"),x="Methylation change in DMGs (fraction difference)",title="Dc.vs.Cc") +
theme(plot.title = element_text(hjust=0.5))
p1_nolab <- p1 + theme(axis.title = element_blank(),
legend.position = "none")
p1_nolab
p2<-ggplot(DMG_Heated_join,
aes(x=diff_Heated_Symb,y=gene_diff_Heated_Symb,colour=methylDirection)) +
geom_smooth(method=lm,colour="orange",size=2,na.rm = TRUE) +
geom_point(size=3) + ylim(-5,5) + xlim(-20,20) +
theme_cowplot() + scale_color_manual(values=pal[c(3,1)]) +
labs(y=bquote("Gene expression (FoldChange"~Log[2]~")"),x="Methylation change in DMGs (fraction difference)",title="Dh.vs.Ch") +
theme(plot.title = element_text(hjust=0.5))
p2_nolab <- p2 + theme(axis.title = element_blank(),
legend.position = "none")
p2_nolab
p3<-ggplot(DMG_SymbC_join,
aes(x=diff_SymbC_Trt,y=gene_diff_SymbC_Trt,colour=methylDirection)) +
geom_smooth(method=lm,colour="orange",size=2,na.rm = TRUE) +
geom_point(size=3) + ylim(-5,5) + #ylim(-1.1,1.1) +
theme_cowplot() + scale_color_manual(values=pal[c(3,1)]) +
labs(y=bquote("Gene expression (FoldChange"~Log[2]~")"),x="Methylation change in DMGs (fraction difference)",title="Ch.vs.Cc") + xlim(-20,20) +
theme(plot.title = element_text(hjust=0.5))
p3_nolab <- p3 + theme(axis.title = element_blank(),
legend.position = "none")
p3_nolab
p4<-ggplot(DMG_SymbD_join,
aes(x=diff_SymbD_Trt,y=gene_diff_SymbD_Trt,colour=methylDirection)) +
geom_smooth(method=lm,colour="orange",size=2,na.rm = TRUE) +
geom_point(size=3) + ylim(-5,5) + xlim(-20,20) +
theme_cowplot() + scale_color_manual(values=pal[c(3,1)]) +
labs(y=bquote("Gene expression (FoldChange"~Log[2]~")"),x="Methylation change in DMGs (fraction difference)",title="Ch.vs.Cc") +
theme(plot.title = element_text(hjust=0.5))
p4_nolab <- p4 + theme(axis.title = element_blank(),
legend.position = "none")
p4_nolab
## Statistical Model ##
plot(lm(DMG_Ctrol_join$gene_diff_Ctrol_Symb~DMG_Ctrol_join$diff_Ctrol_Symb))
plot(lm(DMG_Heated_join$gene_diff_Heated_Symb~DMG_Heated_join$diff_Heated_Symb))
plot(lm(DMG_SymbC_join$gene_diff_SymbC_Trt~DMG_SymbC_join$diff_SymbC_Trt))
plot(lm(DMG_SymbD_join$gene_diff_SymbD_Trt~DMG_SymbD_join$diff_SymbD_Trt))
summary(lm(DMG_Ctrol_join$gene_diff_Ctrol_Symb~DMG_Ctrol_join$diff_Ctrol_Symb))
summary(lm(DMG_Heated_join$gene_diff_Heated_Symb~DMG_Heated_join$diff_Heated_Symb))
summary(lm(DMG_SymbC_join$gene_diff_SymbC_Trt~DMG_SymbC_join$diff_SymbC_Trt))
summary(lm(DMG_SymbD_join$gene_diff_SymbD_Trt~DMG_SymbD_join$diff_SymbD_Trt))
#### Gene level summary difference ####
mat_final <- mat
Ctrol_dnam_diff <- (mat_final$mean_Dc-mat_final$mean_Cc)*100
Heated_dnam_diff <- (mat_final$mean_Dh-mat_final$mean_Ch)*100
SymbC_dnam_diff <- (mat_final$mean_Ch-mat_final$mean_Cc)*100
SymbD_dnam_diff <- (mat_final$mean_Dh-mat_final$mean_Dc)*100
Ctrol_ge_diff <- mat_final$gene_diff_Ctrol_Symb
Heated_ge_diff <- mat_final$gene_diff_Heated_Symb
SymbC_ge_diff <- mat_final$gene_diff_SymbC_Trt
SymbD_ge_diff <- mat_final$gene_diff_SymbD_Trt
gene_summary <- data.frame(Ctrol_dnam=Ctrol_dnam_diff,
Ctrol_ge=Ctrol_ge_diff,
Heated_dnam=Heated_dnam_diff,
Heated_ge=Heated_ge_diff,
SymbC_dnam=SymbC_dnam_diff,
SymbC_ge=SymbC_ge_diff,
SymbD_dnam=SymbD_dnam_diff,
SymbD_ge=SymbD_ge_diff)
gene_summary$Ctrol_density <- get_density(gene_summary$Ctrol_ge, gene_summary$Ctrol_dnam, n = 100)
gene_summary$Heated_density <- get_density(gene_summary$Heated_ge, gene_summary$Heated_dnam, n = 100)
gene_summary$SymbC_density <- get_density(gene_summary$SymbC_ge, gene_summary$SymbC_dnam, n = 100)
gene_summary$SymbD_density <- get_density(gene_summary$SymbD_ge, gene_summary$SymbD_dnam, n = 100)
#Plot
## Dc_Cc - Gene level summary difference
pG_1<-ggplot(gene_summary,
aes(y=Ctrol_ge_diff,x=Ctrol_dnam)) +
geom_point(size=3,aes(color=Ctrol_density)) +
scale_color_viridis() + xlim(-20,20) + ylim(-5,5) +
geom_smooth(method=lm,colour="orange",size=2,na.rm = TRUE) +
theme_cowplot() +
labs(y=bquote("Gene expression (FoldChange"~Log[2]~")"),x="Mean gene methylation (difference %)",title="Dc.vs.Cc") +
theme(plot.title = element_text(hjust=0.5))
pG_1
pG_1_nolab <- pG_1 + theme(axis.title = element_blank(),
legend.position = "none")
#pG_1_nolab
## Dh_Ch - Gene level summary difference
pG_2<-ggplot(gene_summary,
aes(y=Heated_ge_diff,x=Heated_dnam)) +
geom_point(size=3,aes(color=Heated_density)) +
scale_color_viridis() +xlim(-20,20) + ylim(-5,5) +
geom_smooth(method=lm,colour="orange",size=2,na.rm = TRUE) +
theme_cowplot() +
labs(y=bquote("Gene expression (FoldChange"~Log[2]~")"),x="Mean gene methylation (difference %)",title="Dh.vs.Ch") +
theme(plot.title = element_text(hjust=0.5))
pG_2
pG_2_nolab <- pG_2 + theme(axis.title = element_blank(),
legend.position = "none")
#pG_2_nolab
## Dc_Cc - Gene level summary difference
pG_3<-ggplot(gene_summary,
aes(y=SymbC_ge_diff,x=SymbC_dnam)) +
geom_point(size=3,aes(color=SymbC_density)) +
scale_color_viridis() + xlim(-20,20) + ylim(-5,5) +
geom_smooth(method=lm,colour="orange",size=2,na.rm = TRUE) +
theme_cowplot() +
labs(y=bquote("Gene expression (FoldChange"~Log[2]~")"),x="Mean gene methylation (difference %)",title="Ch.vs.Cc") +
theme(plot.title = element_text(hjust=0.5))
pG_3
pG_3_nolab <- pG_3 + theme(axis.title = element_blank(),
legend.position = "none")
#pG_3_nolab
## Dc_Cc - Gene level summary difference
pG_4<-ggplot(gene_summary,
aes(y=SymbD_ge_diff,x=SymbD_dnam)) +
geom_point(size=3,aes(color=SymbD_density)) +
scale_color_viridis() + xlim(-20,20) + ylim(-5,5) +
geom_smooth(method=lm,colour="orange",size=2,na.rm = TRUE) +
theme_cowplot() +
labs(y=bquote("Gene expression (FoldChange"~Log[2]~")"),x="Mean gene methylation (difference %)",title="Dh.vs.Dc") +
theme(plot.title = element_text(hjust=0.5))
pG_4
pG_4_nolab <- pG_4 + theme(axis.title = element_blank(),
legend.position = "none")
#pG_4_nolab
## Statitical models ###
summary(lm(gene_summary$Ctrol_ge~gene_summary$Ctrol_dnam))
summary(lm(gene_summary$Heated_ge~gene_summary$Heated_dnam))
summary(lm(gene_summary$SymbC_ge~gene_summary$SymbC_dnam))
summary(lm(gene_summary$SymbD_ge~gene_summary$SymbD_dnam))
#### Final Figure ####
plot1 <- plot_grid(p1_nolab,p2_nolab, p3_nolab,p4_nolab,ncol=4)
plot2 <- plot_grid(pG_1_nolab,pG_2_nolab,pG_3_nolab,pG_4_nolab,ncol=4)
x.grob1 <- textGrob("DMGs (difference %)",
gp=gpar(col="black", fontsize=15))
x.grob2 <- textGrob("DNA Methylation (difference %)",
gp=gpar(col="black", fontsize=15))
y.grob1 <- textGrob("Gene Expression (log2 fold change)",
gp=gpar( col="black", fontsize=15), rot=90)
save1<-grid.arrange(arrangeGrob(plot1,bottom = x.grob1))
save2<-grid.arrange(arrangeGrob(plot2, bottom = x.grob2))
plot3<-plot_grid(save2,save1,nrow=2,labels=c("A","B"))
saveG<-grid.arrange(arrangeGrob(plot3, left = y.grob1))
ggsave(saveG,filename="../output/suppl/GM_GE-correlation.png", height = 8, width = 13)
DEGs <- read.csv("../analyses/Meth_Expr_analysis/tagseq/DEGs_by_contrast.tsv", sep = "\t")
DEGs <- read.csv("../analyses/Meth_Expr_analysis/tagseq/DEGs_by_contrast.tsv", sep = "\t")
# create a gene list for DEGs in each contrast
gene_list_DEG_CHvCC <- DEGs[which(DEGs$contrast == "Ch.Cc"), 2]
gene_list_DEG_DCvCC <- DEGs[which(DEGs$contrast == "Dc.Cc"), 2]
gene_list_DEG_DHvDC <- DEGs[which(DEGs$contrast == "Dh.Dc"), 2]
gene_list_DEG_DHvCH <- DEGs[which(DEGs$contrast == "Dh.Ch"), 2]
gene_list_DMG_CHvCC <- DMG_SymbC$gene_id
gene_list_DMG_DCvCC <- DMG_Ctrol$gene_id
gene_list_DMG_DHvDC <- DMG_SymbD$gene_id
gene_list_DMG_DHvCH <- DMG_Heated$gene_id
#Create Venn Diagram of CHvCC
library(VennDiagram)
library(RColorBrewer)
Col <- brewer.pal(8, "Pastel1")
myCol <- c("#FBB4AE","#B3CDE3")
venn.diagram(
x = list(gene_list_DEG_CHvCC,gene_list_DMG_CHvCC),
category.names = c("DEGs", "DMGs"),
filename = '../output/figures/DMG_DEG_ChCc_venn_diagramm.png',
output=TRUE,
# Output features
imagetype="png" ,
height = 480 ,
width = 480 ,
resolution = 300,
compression = "lzw",
# Circles
lwd = 2,
lty = 'blank',
fill = myCol,
# Numbers
cex = .6,
fontface = "bold",
fontfamily = "sans",
# Set names
cat.cex = 0.6,
cat.fontface = "bold",
cat.default.pos = "outer",
cat.fontfamily = "sans"
)
##Create Venn Diagram of DCvCC
myCol1 <- c("#CCEBC5","#DECBE4")
venn.diagram(
x = list(gene_list_DEG_DCvCC,gene_list_DMG_DCvCC),
category.names = c("DEGs", "DMGs"),
filename = '../output/figures/DMG_DEG_DcCc_venn_diagramm.png',
output=TRUE,
# Output features
imagetype="png" ,
height = 480 ,
width = 480 ,
resolution = 300,
compression = "lzw",
# Circles
lwd = 2,
lty = 'blank',
fill = myCol1,
# Numbers
cex = .6,
fontface = "bold",
fontfamily = "sans",
# Set names
cat.cex = 0.6,
cat.fontface = "bold",
cat.default.pos = "outer",
cat.fontfamily = "sans"
)
##Create Venn Diagram of DHvDC
myCol2 <- c("#FED9A6","#FFFFCC")
venn.diagram(
x = list(gene_list_DEG_DHvDC,gene_list_DMG_DHvDC),
category.names = c("DEGs", "DMGs"),
filename = '../output/figures/DMG_DEG_DhDc_venn_diagramm.png',
output=TRUE,
# Output features
imagetype="png" ,
height = 480 ,
width = 480 ,
resolution = 300,
compression = "lzw",
# Circles
lwd = 2,
lty = 'blank',
fill = myCol2,
# Numbers
cex = .6,
fontface = "bold",
fontfamily = "sans",
# Set names
cat.cex = 0.6,
cat.fontface = "bold",
cat.default.pos = "outer",
cat.fontfamily = "sans"
)
##Create Venn Diagram of DHvCH
myCol3 <- c("#E5D8BD","#FDDAEC")
venn.diagram(
x = list(gene_list_DEG_DHvCH,gene_list_DMG_DHvCH),
category.names = c("DEGs", "DMGs"),
filename = '../output/figures/DMG_DEG_DhCh_venn_diagramm.png',
output=TRUE,
# Output features
imagetype="png" ,
height = 480 ,
width = 480 ,
resolution = 300,
compression = "lzw",
# Circles
lwd = 2,
lty = 'blank',
fill = myCol3,
# Numbers
cex = .6,
fontface = "bold",
fontfamily = "sans",
# Set names
cat.cex = 0.6,
cat.fontface = "bold",
cat.default.pos = "outer",
cat.fontfamily = "sans"
)
expr_rep <- read.csv("../analyses/Repeat_analysis_MCAV/expression/expr_vs_treat_rep.csv")
meta_data <- read.csv("../data/Treatment_metadata.csv", stringsAsFactors = FALSE)
meta_data <- meta_data[,c(3:11)]
colnames(meta_data) <- c("species", "colony", "core", "sample", "trt1", "trt2", "TreatComb", "Tank","Sample.ID")
expr_rep <- read.csv("../analyses/Repeat_analysis_MCAV/expression/expr_vs_treat_rep.csv")
colnames(expr_rep)[1] <- "repeat_type"
expr_rep_stacked <- expr_rep %>%
group_by(repeat_type) %>%
slice(1) %>%
gather(key = "Sample.ID", value = "perc_expression", -repeat_type)
expr_rep_stacked$Sample.ID <- gsub("\\.","-",expr_rep_stacked$Sample.ID)
expr_rep_stacked <- merge(expr_rep_stacked, meta_data, by = "Sample.ID")
#create a group variable for the combination of treatments
expr_rep_stacked <- expr_rep_stacked %>%
mutate(sym = recode(trt1, b = "D", c = "C"),
group = paste(sym, trt2, sep = ""))
expr_rep_stacked <- expr_rep_stacked[-7]
expr_rep_stacked <- expr_rep %>%
group_by(repeat_type) %>%
slice(1) %>%
gather(key = "Sample.ID", value = "perc_expression", -repeat_type)
library(tidyr)
library(data.table)
library(gplots)
library(ggplot2) #install.packages('ggplot2')
library(dplyr)
library(broom)
library(RColorBrewer)
library(egg) #install.packages('egg')
library(purrr)
library(nlme)
library(vegan)
meta_data <- read.csv("../data/Treatment_metadata.csv", stringsAsFactors = FALSE)
meta_data <- meta_data[,c(3:11)]
colnames(meta_data) <- c("species", "colony", "core", "sample", "trt1", "trt2", "TreatComb", "Tank","Sample.ID")
expr_rep <- read.csv("../analyses/Repeat_analysis_MCAV/expression/expr_vs_treat_rep.csv")
colnames(expr_rep)[1] <- "repeat_type"
expr_rep_stacked <- expr_rep %>%
group_by(repeat_type) %>%
slice(1) %>%
gather(key = "Sample.ID", value = "perc_expression", -repeat_type)
expr_rep_stacked$Sample.ID <- gsub("\\.","-",expr_rep_stacked$Sample.ID)
expr_rep_stacked <- merge(expr_rep_stacked, meta_data, by = "Sample.ID")
#create a group variable for the combination of treatments
expr_rep_stacked <- expr_rep_stacked %>%
mutate(sym = recode(trt1, b = "D", c = "C"),
group = paste(sym, trt2, sep = ""))
expr_rep_stacked <- expr_rep_stacked[-7]
asinTransform <- function(p) { asin(sqrt(p))}
#arcsin transform data
expr_rep_stacked_asin <- expr_rep_stacked
expr_rep_stacked_asin$perc_expression<- asinTransform(expr_rep_stacked_asin$perc_expression)
expr_rep_2way_aov <- expr_rep_stacked_asin %>% group_by(repeat_type) %>%
do(expression_aov_models = aov(perc_expression ~sym*trt2, data = expr_rep_stacked_asin))
#summarize ANOVA data
expr_rep_2way_aov_modelsumm  <- expr_rep_2way_aov %>% ungroup %>%
pull(expression_aov_models) %>%
map_dfr(tidy, .id = 'grp')
#spread out pvalues
expr_rep_2way_aov_modelsumm_wide <- data.frame(tidyr::pivot_wider(expr_rep_2way_aov_modelsumm, names_from = term, values_from = c("df", "sumsq", "meansq","statistic","p.value"),names_sep = "_" ))
expr_rep_2way_aov_modelsumm_wide <- cbind(expr_rep_2way_aov[,1], expr_rep_2way_aov_modelsumm_wide[,-c(1)])
all_aov_sig_sym <- expr_rep_2way_aov_modelsumm_wide[which(expr_rep_2way_aov_modelsumm_wide$p.value_sym <= 0.1), 1]
all_aov_sig_temp <- expr_rep_2way_aov_modelsumm_wide[which(expr_rep_2way_aov_modelsumm_wide$p.value_trt2 <= 0.1), 1]
all_aov_sig_Inter <- expr_rep_2way_aov_modelsumm_wide[which(expr_rep_2way_aov_modelsumm_wide$p.value_sym.trt2 <= 0.1), 1]
expr_rep_1way_aov <- expr_rep_stacked_asin %>% group_by(repeat_type) %>%
do(expression_aov_models = aov(perc_expression ~group, data = . ))
#summarize ANOVA data
expr_rep_1way_aov_modelsumm  <- expr_rep_1way_aov %>% ungroup %>%
pull(expression_aov_models) %>%
map_dfr(tidy, .id = 'grp')
#spread out pvalues
expr_rep_1way_aov_modelsumm_wide <- data.frame(tidyr::pivot_wider(expr_rep_1way_aov_modelsumm, names_from = term, values_from = c("df", "sumsq", "meansq","statistic","p.value"),names_sep = "_" ))
expr_rep_1way_aov_modelsumm_wide <- cbind(expr_rep_1way_aov[,1], expr_rep_1way_aov_modelsumm_wide[,-c(1)])
aov_sig_group <- expr_rep_1way_aov_modelsumm_wide[which(expr_rep_1way_aov_modelsumm_wide$p.value_gro <= 0.05), 1]
#arcsin transform data
expr_rep_stacked_asin <- expr_rep_stacked
expr_rep_stacked_asin$perc_expression<- asinTransform(expr_rep_stacked_asin$perc_expression)
#arcsin transform data
expr_rep_stacked_asin <- expr_rep_stacked
expr_rep_stacked_asin$perc_expression<- asinTransform(expr_rep_stacked_asin$perc_expression)
#arcsin transform data
expr_rep_stacked_asin <- expr_rep_stacked
expr_rep_2way_aov <- expr_rep_stacked_asin %>% group_by(repeat_type) %>%
do(expression_aov_models = aov(perc_expression ~sym*trt2, data = expr_rep_stacked_asin))
#summarize ANOVA data
expr_rep_2way_aov_modelsumm  <- expr_rep_2way_aov %>% ungroup %>%
pull(expression_aov_models) %>%
map_dfr(tidy, .id = 'grp')
#spread out pvalues
expr_rep_2way_aov_modelsumm_wide <- data.frame(tidyr::pivot_wider(expr_rep_2way_aov_modelsumm, names_from = term, values_from = c("df", "sumsq", "meansq","statistic","p.value"),names_sep = "_" ))
expr_rep_2way_aov_modelsumm_wide <- cbind(expr_rep_2way_aov[,1], expr_rep_2way_aov_modelsumm_wide[,-c(1)])
all_aov_sig_sym <- expr_rep_2way_aov_modelsumm_wide[which(expr_rep_2way_aov_modelsumm_wide$p.value_sym <= 0.1), 1]
all_aov_sig_temp <- expr_rep_2way_aov_modelsumm_wide[which(expr_rep_2way_aov_modelsumm_wide$p.value_trt2 <= 0.1), 1]
all_aov_sig_Inter <- expr_rep_2way_aov_modelsumm_wide[which(expr_rep_2way_aov_modelsumm_wide$p.value_sym.trt2 <= 0.1), 1]
expr_rep_1way_aov <- expr_rep_stacked_asin %>% group_by(repeat_type) %>%
do(expression_aov_models = aov(perc_expression ~group, data = . ))
#summarize ANOVA data
expr_rep_1way_aov_modelsumm  <- expr_rep_1way_aov %>% ungroup %>%
pull(expression_aov_models) %>%
map_dfr(tidy, .id = 'grp')
#spread out pvalues
expr_rep_1way_aov_modelsumm_wide <- data.frame(tidyr::pivot_wider(expr_rep_1way_aov_modelsumm, names_from = term, values_from = c("df", "sumsq", "meansq","statistic","p.value"),names_sep = "_" ))
expr_rep_1way_aov_modelsumm_wide <- cbind(expr_rep_1way_aov[,1], expr_rep_1way_aov_modelsumm_wide[,-c(1)])
aov_sig_group <- expr_rep_1way_aov_modelsumm_wide[which(expr_rep_1way_aov_modelsumm_wide$p.value_gro <= 0.05), 1]
